// ------------------------------------------------------------------
//
// INDEX
//
//  #MIXINS
//    =align
//
//  #EXAMPLES
//    [+1] align with arguments
//    [+2] align with arguments and margin between elements
//    [+3] align with arguments and margin between elements declaring side
//
// ------------------------------------------------------------------


// ------------------------------------------------------------------
// #MIXINS
// ------------------------------------------------------------------

// =align
@mixin align($_args: 0, $_gutter: 0px, $_gutter-side: right) {

  $child: last;

  @if $_gutter-side == left {
    $child: first;
  }

  $map: $_args;

  $_gutter: ($_gutter / 1px) * 1px;

  box-sizing: border-box;
  display: flex;
  flex-flow: row nowrap;

  @if $_gutter != 0px {
    > * {
      margin-#{$_gutter-side}: $_gutter !important;
      &:#{$child}-child {
        margin-#{$_gutter-side}: 0 !important;
      }
    }
  }


  // wrap --------------------

  // wrap
  @if(index($map, wrap)) {
    flex-wrap: wrap;
  }

  // wrap-reverse
  @if(index($map, wrap-reverse)) {
    flex-wrap: wrap-reverse;
  }



  // align horizontal --------------------

  // center
  @if(index($map, center)) {
    justify-content: center;
  }

  // right
  @if(index($map, right)) {
    justify-content: flex-end;
    align-self: flex-end;
    margin-left: auto;
  }


  // align vertical --------------------

  // top
  @if(index($map, top)) {
    align-items: flex-start;
  }

  // middle
  @if(index($map, middle)) {
    align-items: center;
  }

  // bottom
  @if(index($map, bottom)) {
    align-items: flex-end;
  }



  // stretch --------------------

  // stretch
  @if(index($map, stretch)) {
    align-items: stretch;
  }



  // direction --------------------

  // reverse
  @if(index($map, reverse)) {
    flex-direction: row-reverse;
  }

  // column
  @if(index($map, column)) {
    flex-direction: column;
     > * {
      flex-basis: auto;
    }
  }

  // column-reverse
  @if(index($map, column-reverse)) {
    flex-direction: column-reverse;
  }


  // space --------------------

  // between
  @if(index($map, between)) {
    justify-content: space-between;
  }

  // around
  @if(index($map, around)) {
    justify-content: space-around;
  }

  > * {
    // max-width: 100%;
    // flex: 1 1 0%;
    box-sizing: border-box;

    // centered
    @if(index($map, centered)) {
      display: flex;
      justify-content: center;
      flex-direction: column;
    }
    @content;
  }
}





// ------------------------------------------------------------------
// #EXAMPLES
// ------------------------------------------------------------------

// [+1] align with arguments
// @include align(center middle reverse); // center | right | top | middle | bottom | reverse | column | column-reverse | between | around | centered

// [+2] align with arguments and margin between elements
// @include align(center middle reverse, 20px);

// [+3] align with arguments and margin between elements declaring side
// @include align(center middle reverse, 20px, left);
